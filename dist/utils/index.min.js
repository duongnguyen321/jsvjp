import{colorsList as e,wordsList as r}from"../themes/index.js";export function $(e,r){if("string"!=typeof e||!e.trim())throw new Error("Invalid selector");const t=document.querySelector(e);if(!t)throw new Error(r||`No element found matching selector: ${e}`);return t}export function $$(e,r){if("string"!=typeof e||!e.trim())throw new Error("Invalid selector");const t=document.querySelectorAll(e);if(0===t.length)throw new Error(r||`No elements found matching selector: ${e}`);return Array.from(t)}export function HTML(e,r,t,o){if("string"!=typeof e)throw new Error("Invalid tag name");const n=document.createElement(e);if(t&&(n.textContent=t),r&&n.classList.add(r),o)for(const e in o)n.setAttribute(e,o[e]);return document.body.appendChild(n),n}export function CSS(e,r){const t=$(e);t||HTML("h1","error",`No element found matching selector: ${e}`);for(const e in r)t.style[e]=r[e];return t}export function randomColor(){return e[Math.floor(Math.random()*e.length)]}export function log(...e){if(e.length)for(const t of Array.from(e)){const e=HTML("pre"),o=HTML("code");let n="";try{if(Array.isArray(t)||"object"==typeof t)if("Object"===t.constructor.name||"Array"===t.constructor.name)n=JSON.stringify(t,null,2);else{const e={};for(const r in t)if(t[r]&&"style"!==r)switch(t[r].constructor.name){case"Object":case"Array":e[r]=JSON.stringify(t[r],null,2);break;case"Number":case"String":case"Boolean":r.includes(r.toUpperCase())||(e[r]=t[r]);break;default:e[r]=t[r].toString()}n=`${t.constructor.name}: ${JSON.stringify(e,null,2)}`}else n=String(t)}catch(e){n=JSON.stringify(t,null,2),HTML("h1","error",e.message)}finally{n=n?.trim().replaceAll("\\","")}Array.isArray(t)||"object"==typeof t?e.classList.add("json"):e.classList.add("code");const s=new RegExp(Object.keys(r).join("|")+"|[^ws]","gi"),c=[],l=n.replace(s,(e=>{if(r.hasOwnProperty(e))return`<span style="color:${r[e].color}">${e}</span>`;if(/[(){}\[\]]/.test(e)){let r=randomColor();return"("===e||"{"===e||"["===e?(c.push(r),`<span class="open" style="color:${r}">${e}</span>`):`<span class="close" style="color:${c.pop()||randomColor()}">${e}</span>`}return e}));o.innerHTML=l.replaceAll("\\",""),e.appendChild(o),$("body").appendChild(e)}else HTML("h1","error","data cannot be undefined")}export default log;