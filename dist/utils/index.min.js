import{colorsList as f,wordsList as a}from"../themes/index.min.js";export function $(t,e){if(typeof t!="string"||!t.trim())throw new Error("Invalid selector");const r=document.querySelector(t);if(!r)throw new Error(e||`No element found matching selector: ${t}`);return r}export function $$(t,e){if(typeof t!="string"||!t.trim())throw new Error("Invalid selector");const r=document.querySelectorAll(t);if(r.length===0)throw new Error(e||`No elements found matching selector: ${t}`);return Array.from(r)}export function HTML(t,e,r,s){if(typeof t!="string")throw new Error("Invalid tag name");const n=document.createElement(t);if(r&&(n.textContent=r),e&&n.classList.add(e),s)for(const i in s)n.setAttribute(i,s[i]);return document.body.appendChild(n),n}export function CSS(t,e){const r=$(t);r||HTML("h1","error",`No element found matching selector: ${t}`);for(const s in e)r.style[s]=e[s];return r}export function randomColor(){return f[Math.floor(Math.random()*f.length)]}export function log(...t){if(t.length)for(const e of Array.from(t)){const r=HTML("pre"),s=HTML("code");let n="";try{if(Array.isArray(e)||typeof e=="object")if(e.constructor.name==="Object"||e.constructor.name==="Array")n=JSON.stringify(e,null,2);else{const i={};for(const o in e)if(e[o]&&o!=="style")switch(e[o].constructor.name){case"Object":case"Array":i[o]=JSON.stringify(e[o],null,2);break;case"Number":case"String":case"Boolean":o.includes(o.toUpperCase())||(i[o]=e[o]);break;default:i[o]=e[o].toString();break}n=`${e.constructor.name}: ${JSON.stringify(i,null,2)}`}else n=String(e)}catch(i){n=JSON.stringify(e,null,2),HTML("h1","error",i.message)}finally{n=n?.trim().replaceAll("\\","")}if(Array.isArray(e)||typeof e=="object")s.innerText=n;else{r.classList.add("code");const i=new RegExp(Object.keys(a).join("|")+"|[^ws]","gi"),o=[],u=n.replace(i,l=>{if(a.hasOwnProperty(l))return`<span style="color:${a[l].color}">${l}</span>`;if(/[(){}\[\]]/.test(l)){let c=randomColor();return l==="("||l==="{"||l==="["?(o.push(c),`<span style="color:${c}">${l}</span>`):`<span style="color:${o.pop()||randomColor()}">${l}</span>`}return l});s.innerHTML=u.replaceAll("\\","")}r.appendChild(s),$("body").appendChild(r)}else{HTML("h1","error","data cannot be undefined");return}}export default log;
